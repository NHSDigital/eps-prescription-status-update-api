AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: |
  PSU API's and related resources

Parameters:
  StackName:
    Type: String
    Description: The name of the main stack
    Default: none
  
  EnableMutualTLS:
    Type: String
    Description: Whether to use mutual TLS
  
  TruststoreVersion:
    Type: String
    Description: TruststoreVersion
  
  UpdatePrescriptionStatusStateMachineName:
    Type: String
    Description: Name of the UpdatePrescriptionStatus state machine
    Default: none
  
  UpdatePrescriptionStatusStateMachineArn:
    Type: String
    Description: Arn of the UpdatePrescriptionStatus state machine
    Default: none

  LogRetentionInDays:
    Type: Number
    Description: How long to keep logs for.
  
  EnableSplunk:
    Type: String
    Description: Whether to use splunk

Conditions:
  ShouldUseMutualTLS: !Equals
    - true
    - !Ref EnableMutualTLS

Resources:
  GenerateCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      ValidationMethod: DNS
      DomainName: !Join
        - .
        - - !Ref StackName
          - !ImportValue eps-route53-resources:EPS-domain
      DomainValidationOptions:
        - DomainName: !Join
            - .
            - - !Ref StackName
              - !ImportValue eps-route53-resources:EPS-domain
          HostedZoneId: !ImportValue eps-route53-resources:EPS-ZoneID
  
  HttpApiGateway:
    Type: AWS::Serverless::HttpApi
    Name: !Sub ${StackName}-apigw
    Properties:
      StageName: Prod
      DefaultRouteSettings:
        DetailedMetricsEnabled: true
      Domain:
        DomainName: !Join
          - .
          - - !Ref StackName
            - !ImportValue eps-route53-resources:EPS-domain
        CertificateArn: !Ref GenerateCertificate
        Route53:
          HostedZoneId: !ImportValue eps-route53-resources:EPS-ZoneID
        EndpointConfiguration: REGIONAL
        SecurityPolicy: TLS_1_2
        MutualTlsAuthentication:
          TruststoreUri: !If
            - ShouldUseMutualTLS
            - !Join
              - /
              - - s3:/
                - !Select
                  - 5
                  - !Split
                    - ':'
                    - !ImportValue account-resources:TrustStoreBucket
                - psu-truststore.pem
            - !Ref AWS::NoValue
          TruststoreVersion: !If
            - ShouldUseMutualTLS
            - !Ref TruststoreVersion
            - !Ref AWS::NoValue
      DisableExecuteApiEndpoint: !If
        - ShouldUseMutualTLS
        - true
        - !Ref AWS::NoValue
      AccessLogSettings:
        DestinationArn: !GetAtt HttpApiGatewayResources.Outputs.ApiGwAccessLogsArn
        Format: '{ "requestTime": "$context.requestTime", "apiId": "$context.apiId", "accountId": "$context.accountId", "resourcePath": "$context.resourcePath", "stage": "$context.stage", "requestId": "$context.requestId", "extendedRequestId": "$context.extendedRequestId", "status": "$context.status", "httpMethod": "$context.httpMethod", "protocol": "$context.protocol", "path": "$context.path", "responseLatency": "$context.responseLatency", "responseLength": "$context.responseLength", "domainName": "$context.domainName", "identity": { "sourceIp": "$context.identity.sourceIp", "userAgent": "$context.identity.userAgent", "clientCert":{ "subjectDN": "$context.identity.clientCert.subjectDN", "issuerDN": "$context.identity.clientCert.issuerDN", "serialNumber": "$context.identity.clientCert.serialNumber", "validityNotBefore": "$context.identity.clientCert.validity.notBefore", "validityNotAfter": "$context.identity.clientCert.validity.notAfter" }}, "integration":{ "error": "$context.integration.error", "integrationStatus": "$context.integration.integrationStatus", "latency": "$context.integration.latency", "requestId": "$context.integration.requestId", "status": "$context.integration.status" }}'
      DefinitionBody:
        openapi: 3.0.1
        title: !Sub ${StackName}-apigw
        info:
          version: 1.0.0
        paths:
          /:
            post:
              responses:
                default:
                  description: "Default response for POST /"
              x-amazon-apigateway-integration:
                integrationSubtype: StepFunctions-StartSyncExecution
                credentials: !GetAtt HttpApiGatewayResources.Outputs.ApiGwRoleArn
                requestParameters:
                  Input: $request
                  StateMachineArn: !Ref UpdatePrescriptionStatusStateMachineArn
                payloadFormatVersion: 1.0
                type: aws_proxy
                connectionType: INTERNET
        x-amazon-apigateway-importexport-version: 1.0
  
  HttpApiGatewayResources:
    Type: AWS::Serverless::Application
    Properties:
      Location: api_resources.yaml
      Parameters:
        AdditionalPolicies: !Join
          - ','
          - - Fn::ImportValue: !Sub ${StackName}:state-machines:${UpdatePrescriptionStatusStateMachineName}:ExecuteStateMachinePolicy
        ApiName: !Sub ${StackName}-apigw
        LogRetentionInDays: !Ref LogRetentionInDays
        EnableSplunk: !Ref EnableSplunk
