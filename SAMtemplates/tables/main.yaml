AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: |
  PSU DynamoDB tables and related resources

Parameters:
  StackName:
    Type: String
    Default: none

  EnableDynamoDBAutoScaling:
    Type: String

Conditions:
  EnableDynamoDBAutoScalingCondition: !Equals
    - true
    - !Ref EnableDynamoDBAutoScaling

Resources:
  PrescriptionStatusUpdatesKMSKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"

  PrescriptionStatusUpdatesKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${StackName}-PrescriptionStatusUpdatesKMSKeyAlias
      TargetKeyId: !Ref PrescriptionStatusUpdatesKMSKey

  UsePrescriptionStatusUpdatesKMSKeyPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt PrescriptionStatusUpdatesKMSKey.Arn

  PrescriptionStatusUpdatesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${StackName}-PrescriptionStatusUpdates
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      AttributeDefinitions:
        - AttributeName: TaskID
          AttributeType: S
        - AttributeName: PrescriptionID
          AttributeType: S
        - AttributeName: PatientNHSNumber
          AttributeType: S
        - AttributeName: PharmacyODSCode
          AttributeType: S
      KeySchema:
        - AttributeName: PrescriptionID
          KeyType: HASH
        - AttributeName: TaskID
          KeyType: RANGE
      BillingMode: !If
        - EnableDynamoDBAutoScalingCondition
        - PROVISIONED
        - PAY_PER_REQUEST
      ProvisionedThroughput: !If
        - EnableDynamoDBAutoScalingCondition
        - ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        - !Ref "AWS::NoValue"
      SSESpecification:
        KMSMasterKeyId: !Ref PrescriptionStatusUpdatesKMSKey
        SSEEnabled: true
        SSEType: KMS
      TimeToLiveSpecification:
        AttributeName: ExpiryTime
        Enabled: true
      GlobalSecondaryIndexes:
        - IndexName: PharmacyODSCodePrescriptionIDIndex
          KeySchema:
            - AttributeName: PharmacyODSCode
              KeyType: HASH
            - AttributeName: PrescriptionID
              KeyType: RANGE
          Projection:
            NonKeyAttributes:
              - PatientNHSNumber
              - LineItemID
              - TerminalStatus
              - LastModified
              - Status
            ProjectionType: INCLUDE
          ProvisionedThroughput: !If
            - EnableDynamoDBAutoScalingCondition
            - ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            - !Ref "AWS::NoValue"
        - IndexName: PatientNHSNumberIndex
          KeySchema:
            - AttributeName: PatientNHSNumber
              KeyType: HASH
          Projection:
            ProjectionType: KEYS_ONLY
          ProvisionedThroughput: !If
            - EnableDynamoDBAutoScalingCondition
            - ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            - !Ref "AWS::NoValue"

  PrescriptionStatusUpdatesResources:
    Type: AWS::Serverless::Application
    Properties:
      Location: dynamodb_resources.yaml
      Parameters:
        StackName: !Ref StackName
        TableName: !Ref PrescriptionStatusUpdatesTable
        TableArn: !GetAtt PrescriptionStatusUpdatesTable.Arn

  DynamoDbScalingRole:
    Condition: EnableDynamoDBAutoScalingCondition
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              { "Service": ["dynamodb.application-autoscaling.amazonaws.com"] }
            Action: ["sts:AssumeRole"]
      Path: "/"
      Policies:
        - PolicyName: DynamoDBScaling
          PolicyDocument: !Sub |
            {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "dynamodb:DescribeTable",
                            "dynamodb:UpdateTable"
                        ],
                        "Resource": "${PrescriptionStatusUpdatesTable.Arn}"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Resource": "*"
                    }
                ]
            }

  PrescriptionStatusUpdatesTableWriteScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: PrescriptionStatusUpdatesTable
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      MaxCapacity: 100
      MinCapacity: 1
      ResourceId: !Sub table/${PrescriptionStatusUpdatesTable}
      RoleARN: !GetAtt DynamoDbScalingRole.Arn
      ScalableDimension: "dynamodb:table:WriteCapacityUnits"
      ServiceNamespace: dynamodb

  PrescriptionStatusUpdatesTableWriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      PolicyName: PrescriptionStatusUpdatesTableWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref PrescriptionStatusUpdatesTableWriteScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization

  PrescriptionStatusUpdatesTableReadScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: PrescriptionStatusUpdatesTable
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      MaxCapacity: 100
      MinCapacity: 1
      ResourceId: !Sub table/${PrescriptionStatusUpdatesTable}
      RoleARN: !GetAtt DynamoDbScalingRole.Arn
      ScalableDimension: "dynamodb:table:ReadCapacityUnits"
      ServiceNamespace: dynamodb

  PrescriptionStatusUpdatesTableReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      PolicyName: PrescriptionStatusUpdatesTableReadScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref PrescriptionStatusUpdatesTableReadScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization

  PharmacyIndexScalingWriteTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: PrescriptionStatusUpdatesTable
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      MaxCapacity: 100
      MinCapacity: 1
      ResourceId: !Sub table/${PrescriptionStatusUpdatesTable}/index/PharmacyODSCodePrescriptionIDIndex
      RoleARN: !GetAtt DynamoDbScalingRole.Arn
      ScalableDimension: "dynamodb:index:WriteCapacityUnits"
      ServiceNamespace: dynamodb

  PharmacyIndexScalingWritePolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      PolicyName: PharmacyIndexWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref PharmacyIndexScalingWriteTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization

  NHSNumberIndexScalingWriteTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: PrescriptionStatusUpdatesTable
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      MaxCapacity: 100
      MinCapacity: 1
      ResourceId: !Sub table/${PrescriptionStatusUpdatesTable}/index/PatientNHSNumberIndex
      RoleARN: !GetAtt DynamoDbScalingRole.Arn
      ScalableDimension: "dynamodb:index:WriteCapacityUnits"
      ServiceNamespace: dynamodb

  NHSNumberIndexScalingWritePolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      PolicyName: NHSNumberIndexWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref NHSNumberIndexScalingWriteTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization

  NHSNumberIndexScalingReadTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: PrescriptionStatusUpdatesTable
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      MaxCapacity: 100
      MinCapacity: 1
      ResourceId: !Sub table/${PrescriptionStatusUpdatesTable}/index/PatientNHSNumberIndex
      RoleARN: !GetAtt DynamoDbScalingRole.Arn
      ScalableDimension: "dynamodb:index:ReadCapacityUnits"
      ServiceNamespace: dynamodb

  NHSNumberIndexScalingReadPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      PolicyName: NHSNumberIndexWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref NHSNumberIndexScalingReadTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization

Outputs:
  PrescriptionStatusUpdatesTableName:
    Description: PrescriptionStatusUpdates table name
    Value: !Ref PrescriptionStatusUpdatesTable

  PrescriptionStatusUpdatesTableArn:
    Description: PrescriptionStatusUpdates table arn
    Value: !GetAtt PrescriptionStatusUpdatesTable.Arn

  UsePrescriptionStatusUpdatesKMSKeyPolicyArn:
    Description: Use kms key policy arn
    Value: !GetAtt UsePrescriptionStatusUpdatesKMSKeyPolicy.PolicyArn
    Export:
      Name: !Sub ${StackName}:tables:UsePrescriptionStatusUpdatesKMSKeyPolicyArn
