AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: |
  PSU DynamoDB tables and related resources

Parameters:
  StackName:
    Type: String
    Default: none

  EnableDynamoDBAutoScaling:
    Type: String

  MinWritePrescriptionStatusUpdatesCapacity:
    Type: Number
    Default: 50

  MaxWritePrescriptionStatusUpdatesCapacity:
    Type: Number
    Default: 600

  MinWritePrescriptionNotificationStatesCapacity:
    Type: Number
    Default: 50

  MaxWritePrescriptionNotificationStatesCapacity:
    Type: Number
    Default: 600

Conditions:
  EnableDynamoDBAutoScalingCondition: !Equals
    - "true"
    - !Ref EnableDynamoDBAutoScaling

Resources:

#---------------------#
#    Common things    #
#---------------------#

  DynamoDbScalingRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument: !Sub |
        {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "dynamodb:DescribeTable",
                        "dynamodb:UpdateTable"
                    ],
                    "Resource": "${PrescriptionStatusUpdatesTable.Arn}"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "cloudwatch:PutMetricAlarm",
                        "cloudwatch:DescribeAlarms",
                        "cloudwatch:DeleteAlarms"
                    ],
                    "Resource": "*"
                }
            ]
        }

  DynamoDbScalingRole:
    Condition: EnableDynamoDBAutoScalingCondition
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              { "Service": ["dynamodb.application-autoscaling.amazonaws.com"] }
            Action: ["sts:AssumeRole"]
      Path: "/"
      ManagedPolicyArns:
        - !Ref DynamoDbScalingRolePolicy


#-----------------------------------------#
#    Prescription Status Updates Table    #
#-----------------------------------------#

  PrescriptionStatusUpdatesKMSKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Sid: Enable read only decrypt
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - kms:DescribeKey
              - kms:Decrypt
            Resource: "*"
            Condition:
              ArnLike:
                aws:PrincipalArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/${AWS::Region}/AWSReservedSSO_ReadOnly*"

  PrescriptionStatusUpdatesKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${StackName}-PrescriptionStatusUpdatesKMSKeyAlias
      TargetKeyId: !Ref PrescriptionStatusUpdatesKMSKey

  UsePrescriptionStatusUpdatesKMSKeyPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt PrescriptionStatusUpdatesKMSKey.Arn

  PrescriptionStatusUpdatesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${StackName}-PrescriptionStatusUpdates
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      AttributeDefinitions:
        - AttributeName: TaskID
          AttributeType: S
        - AttributeName: PrescriptionID
          AttributeType: S
        - AttributeName: PatientNHSNumber
          AttributeType: S
        - AttributeName: PharmacyODSCode
          AttributeType: S
      KeySchema:
        - AttributeName: PrescriptionID
          KeyType: HASH
        - AttributeName: TaskID
          KeyType: RANGE
      BillingMode: !If
        - EnableDynamoDBAutoScalingCondition
        - PROVISIONED
        - PAY_PER_REQUEST
      ProvisionedThroughput: !If
        - EnableDynamoDBAutoScalingCondition
        - ReadCapacityUnits: 1
          WriteCapacityUnits: !Ref MinWritePrescriptionStatusUpdatesCapacity
        - !Ref "AWS::NoValue"
      SSESpecification:
        KMSMasterKeyId: !Ref PrescriptionStatusUpdatesKMSKey
        SSEEnabled: true
        SSEType: KMS
      TimeToLiveSpecification:
        AttributeName: ExpiryTime
        Enabled: true
      GlobalSecondaryIndexes:
        - IndexName: PharmacyODSCodePrescriptionIDIndex
          KeySchema:
            - AttributeName: PharmacyODSCode
              KeyType: HASH
            - AttributeName: PrescriptionID
              KeyType: RANGE
          Projection:
            NonKeyAttributes:
              - PatientNHSNumber
              - LineItemID
              - TerminalStatus
              - LastModified
              - Status
            ProjectionType: INCLUDE
          ProvisionedThroughput: !If
            - EnableDynamoDBAutoScalingCondition
            - ReadCapacityUnits: 1
              WriteCapacityUnits: !Ref MinWritePrescriptionStatusUpdatesCapacity
            - !Ref "AWS::NoValue"
        - IndexName: PatientNHSNumberIndex
          KeySchema:
            - AttributeName: PatientNHSNumber
              KeyType: HASH
          Projection:
            ProjectionType: KEYS_ONLY
          ProvisionedThroughput: !If
            - EnableDynamoDBAutoScalingCondition
            - ReadCapacityUnits: 1
              WriteCapacityUnits: !Ref MinWritePrescriptionStatusUpdatesCapacity
            - !Ref "AWS::NoValue"

  PrescriptionStatusUpdatesResources:
    Type: AWS::Serverless::Application
    Properties:
      Location: dynamodb_resources.yaml
      Parameters:
        StackName: !Ref StackName
        TableName: !Ref PrescriptionStatusUpdatesTable
        TableArn: !GetAtt PrescriptionStatusUpdatesTable.Arn

  PrescriptionStatusUpdatesTableWriteScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: PrescriptionStatusUpdatesTable
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      MinCapacity: !Ref MinWritePrescriptionStatusUpdatesCapacity
      MaxCapacity: !Ref MaxWritePrescriptionStatusUpdatesCapacity
      ResourceId: !Sub table/${PrescriptionStatusUpdatesTable}
      RoleARN: !GetAtt DynamoDbScalingRole.Arn
      ScalableDimension: "dynamodb:table:WriteCapacityUnits"
      ServiceNamespace: dynamodb

  PrescriptionStatusUpdatesTableWriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      PolicyName: PrescriptionStatusUpdatesTableWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref PrescriptionStatusUpdatesTableWriteScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50
        ScaleInCooldown: 600
        ScaleOutCooldown: 0
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization

  PrescriptionStatusUpdatesTableReadScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: PrescriptionStatusUpdatesTable
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      MaxCapacity: 100
      MinCapacity: 1
      ResourceId: !Sub table/${PrescriptionStatusUpdatesTable}
      RoleARN: !GetAtt DynamoDbScalingRole.Arn
      ScalableDimension: "dynamodb:table:ReadCapacityUnits"
      ServiceNamespace: dynamodb

  PrescriptionStatusUpdatesTableReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      PolicyName: PrescriptionStatusUpdatesTableReadScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref PrescriptionStatusUpdatesTableReadScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization

  PharmacyIndexScalingWriteTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: PrescriptionStatusUpdatesTable
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      MinCapacity: !Ref MinWritePrescriptionStatusUpdatesCapacity
      MaxCapacity: !Ref MaxWritePrescriptionStatusUpdatesCapacity
      ResourceId: !Sub table/${PrescriptionStatusUpdatesTable}/index/PharmacyODSCodePrescriptionIDIndex
      RoleARN: !GetAtt DynamoDbScalingRole.Arn
      ScalableDimension: "dynamodb:index:WriteCapacityUnits"
      ServiceNamespace: dynamodb

  PharmacyIndexScalingWritePolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      PolicyName: PharmacyIndexWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref PharmacyIndexScalingWriteTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50
        ScaleInCooldown: 600
        ScaleOutCooldown: 0
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization

  PharmacyIndexScalingReadTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: PrescriptionStatusUpdatesTable
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      MaxCapacity: 100
      MinCapacity: 1
      ResourceId: !Sub table/${PrescriptionStatusUpdatesTable}/index/PharmacyODSCodePrescriptionIDIndex
      RoleARN: !GetAtt DynamoDbScalingRole.Arn
      ScalableDimension: "dynamodb:index:ReadCapacityUnits"
      ServiceNamespace: dynamodb

  PharmacyIndexScalingReadPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      PolicyName: NHSNumberIndexReadScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref PharmacyIndexScalingReadTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 600
        ScaleOutCooldown: 10
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization

  NHSNumberIndexScalingWriteTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: PrescriptionStatusUpdatesTable
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      MinCapacity: !Ref MinWritePrescriptionStatusUpdatesCapacity
      MaxCapacity: !Ref MaxWritePrescriptionStatusUpdatesCapacity
      ResourceId: !Sub table/${PrescriptionStatusUpdatesTable}/index/PatientNHSNumberIndex
      RoleARN: !GetAtt DynamoDbScalingRole.Arn
      ScalableDimension: "dynamodb:index:WriteCapacityUnits"
      ServiceNamespace: dynamodb

  NHSNumberIndexScalingWritePolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      PolicyName: NHSNumberIndexWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref NHSNumberIndexScalingWriteTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50
        ScaleInCooldown: 600
        ScaleOutCooldown: 0
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization

  NHSNumberIndexScalingReadTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: PrescriptionStatusUpdatesTable
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      MaxCapacity: 100
      MinCapacity: 1
      ResourceId: !Sub table/${PrescriptionStatusUpdatesTable}/index/PatientNHSNumberIndex
      RoleARN: !GetAtt DynamoDbScalingRole.Arn
      ScalableDimension: "dynamodb:index:ReadCapacityUnits"
      ServiceNamespace: dynamodb

  NHSNumberIndexScalingReadPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      PolicyName: NHSNumberIndexWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref NHSNumberIndexScalingReadTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization


#--------------------------------#
#    Notification State Table    #
#--------------------------------#

  PrescriptionNotificationStatesKMSKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Sid: Enable read only decrypt
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - kms:DescribeKey
              - kms:Decrypt
            Resource: "*"
            Condition:
              ArnLike:
                aws:PrincipalArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/${AWS::Region}/AWSReservedSSO_ReadOnly*"

  PrescriptionNotificationStatesKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${StackName}-PrescriptionNotificationStatesKMSKeyAlias
      TargetKeyId: !Ref PrescriptionNotificationStatesKMSKey

  UsePrescriptionNotificationStatesKMSKeyPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:GenerateDataKey*
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:Decrypt
            Resource: !GetAtt PrescriptionNotificationStatesKMSKey.Arn

  PrescriptionNotificationStatesTableV1:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${StackName}-PrescriptionNotificationStatesV1
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      AttributeDefinitions:
        - AttributeName: NHSNumber
          AttributeType: S
        - AttributeName: ODSCode
          AttributeType: S
        - AttributeName: RequestId # this is the PSU request ID, and is used to identify a single notification's flow
          AttributeType: S
        - AttributeName: NotifyMessageID # This is the ID returned by Notify for this notification request. Used for callback lookup
          AttributeType: S

      GlobalSecondaryIndexes:
        - IndexName: PatientPharmacyIndex
          KeySchema:
            - AttributeName: NHSNumber
              KeyType: HASH
            - AttributeName: ODSCode
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput: !If
            - EnableDynamoDBAutoScalingCondition
            - ReadCapacityUnits: 1
              WriteCapacityUnits: !Ref MinWritePrescriptionNotificationStatesCapacity
            - !Ref "AWS::NoValue"

        - IndexName: NotifyMessageIDIndex
          KeySchema:
            - AttributeName: NotifyMessageID
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput: !If
            - EnableDynamoDBAutoScalingCondition
            - ReadCapacityUnits: 1
              WriteCapacityUnits: !Ref MinWritePrescriptionNotificationStatesCapacity
            - !Ref "AWS::NoValue"

      KeySchema:
        - AttributeName: NHSNumber
          KeyType: HASH       # Partition key
        - AttributeName: RequestId
          KeyType: RANGE      # Sort key
      BillingMode: !If
        - EnableDynamoDBAutoScalingCondition
        - PROVISIONED
        - PAY_PER_REQUEST
      ProvisionedThroughput: !If
        - EnableDynamoDBAutoScalingCondition
        - ReadCapacityUnits: 1
          WriteCapacityUnits: !Ref MinWritePrescriptionNotificationStatesCapacity
        - !Ref "AWS::NoValue"
      SSESpecification:
        KMSMasterKeyId: !Ref PrescriptionNotificationStatesKMSKey
        SSEEnabled: true
        SSEType: KMS
      TimeToLiveSpecification:
        AttributeName: ExpiryTime
        Enabled: true

  PrescriptionNotificationStatesV1Resources:
    Type: AWS::Serverless::Application
    Properties:
      Location: dynamodb_resources.yaml
      Parameters:
        StackName: !Ref StackName
        TableName: !Ref PrescriptionNotificationStatesTableV1
        TableArn: !GetAtt PrescriptionNotificationStatesTableV1.Arn

  # Auto scaling for the table
  PrescriptionNotificationStatesTableV1WriteScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: PrescriptionNotificationStatesTableV1
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      MinCapacity: !Ref MinWritePrescriptionNotificationStatesCapacity
      MaxCapacity: !Ref MaxWritePrescriptionNotificationStatesCapacity
      ResourceId: !Sub table/${PrescriptionNotificationStatesTableV1}
      RoleARN: !GetAtt DynamoDbScalingRole.Arn
      ScalableDimension: "dynamodb:table:WriteCapacityUnits"
      ServiceNamespace: dynamodb

  PrescriptionNotificationStatesTableV1WriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      PolicyName: PrescriptionNotificationStatesTableV1WriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref PrescriptionNotificationStatesTableV1WriteScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50
        ScaleInCooldown: 600
        ScaleOutCooldown: 0
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization

  PrescriptionNotificationStatesTableV1ReadScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: PrescriptionNotificationStatesTableV1
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      MinCapacity: 1
      MaxCapacity: 100
      ResourceId: !Sub table/${PrescriptionNotificationStatesTableV1}
      RoleARN: !GetAtt DynamoDbScalingRole.Arn
      ScalableDimension: "dynamodb:table:ReadCapacityUnits"
      ServiceNamespace: dynamodb

  PrescriptionNotificationStatesTableV1ReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      PolicyName: PrescriptionNotificationStatesTableV1ReadScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref PrescriptionNotificationStatesTableV1ReadScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization

  # Scaling for the indexes

  PatientPharmacyIndexScalingWriteTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: PrescriptionNotificationStatesTableV1
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      MinCapacity: !Ref MinWritePrescriptionNotificationStatesCapacity
      MaxCapacity: !Ref MaxWritePrescriptionNotificationStatesCapacity
      ResourceId: !Sub table/${PrescriptionNotificationStatesTableV1}/index/PatientPharmacyIndex
      RoleARN: !GetAtt DynamoDbScalingRole.Arn
      ScalableDimension: "dynamodb:index:WriteCapacityUnits"
      ServiceNamespace: dynamodb

  PatientPharmacyIndexScalingWritePolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      PolicyName: PatientPharmacyIndexWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref PatientPharmacyIndexScalingWriteTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50
        ScaleInCooldown: 600
        ScaleOutCooldown: 0
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization

  NotifyMessageIDIndexScalingWriteTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: PrescriptionNotificationStatesTableV1
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      MinCapacity: !Ref MinWritePrescriptionNotificationStatesCapacity
      MaxCapacity: !Ref MaxWritePrescriptionNotificationStatesCapacity
      ResourceId: !Sub table/${PrescriptionNotificationStatesTableV1}/index/NotifyMessageIDIndex
      RoleARN: !GetAtt DynamoDbScalingRole.Arn
      ScalableDimension: dynamodb:index:WriteCapacityUnits
      ServiceNamespace: dynamodb

  NotifyMessageIDIndexScalingWritePolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamoDBAutoScalingCondition
    Properties:
      PolicyName: NotifyMessageIDIndexWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref NotifyMessageIDIndexScalingWriteTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50
        ScaleInCooldown: 600
        ScaleOutCooldown: 0
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization

Outputs:
  PrescriptionStatusUpdatesTableName:
    Description: PrescriptionStatusUpdates table name
    Value: !Ref PrescriptionStatusUpdatesTable

  PrescriptionStatusUpdatesTableArn:
    Description: PrescriptionStatusUpdates table arn
    Value: !GetAtt PrescriptionStatusUpdatesTable.Arn

  UsePrescriptionStatusUpdatesKMSKeyPolicyArn:
    Description: Use kms key policy arn
    Value: !GetAtt UsePrescriptionStatusUpdatesKMSKeyPolicy.PolicyArn
    Export:
      Name: !Sub ${StackName}:tables:UsePrescriptionStatusUpdatesKMSKeyPolicyArn

  PrescriptionNotificationStatesTableName:
    Description: PrescriptionNotificationStates table name
    Value: !Ref PrescriptionNotificationStatesTableV1

  PrescriptionNotificationStatesTableArn:
    Description: PrescriptionNotificationStates table ARN
    Value: !GetAtt PrescriptionNotificationStatesTableV1.Arn

  UsePrescriptionNotificationStatesKMSKeyPolicyArn:
    Description: Use kms key policy arn
    Value: !GetAtt UsePrescriptionNotificationStatesKMSKeyPolicy.PolicyArn
    Export:
      Name: !Sub ${StackName}:tables:UsePrescriptionNotificationStatesKMSKeyPolicyArn
