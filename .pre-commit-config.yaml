repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-merge-conflict
        name: Check for merge conflict strings

      - id: end-of-file-fixer
        name: Fix missing newline at the end of files

      - id: check-shebang-scripts-are-executable
        name: Check shell scripts are executable
        files: \.(sh)$

      - id: check-yaml
        name: Check pipelines configuration
        files: ^(.github)

  - repo: https://github.com/pycqa/flake8
    rev: "7ef0350a439c93166bc8ba89fcc3de6a9a664e6c" # release 6.1.0
    hooks:
      - id: flake8

  - repo: local
    hooks:
      - id: lint-updatePrescriptionStatus
        name: Lint updatePrescriptionStatus
        entry: npm
        args: ["run", "--prefix=packages/updatePrescriptionStatus", "lint"]
        language: system
        files: ^packages\/updatePrescriptionStatus
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-gsul
        name: Lint gsul
        entry: npm
        args: ["run", "--prefix=packages/gsul", "lint"]
        language: system
        files: ^packages\/gsul
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-sandbox
        name: Lint sandbox
        entry: npm
        args: ["run", "--prefix=packages/nhsd-psu-sandbox", "lint"]
        language: system
        files: ^packages\/nhsd-psu-sandbox
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-statusLambda
        name: Lint statusLambda
        entry: npm
        args: ["run", "--prefix=packages/statusLambda", "lint"]
        language: system
        files: ^packages\/statusLambda
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-cpsuLambda
        name: Lint cpsuLambda
        entry: npm
        args: ["run", "--prefix=packages/cpsuLambda", "lint"]
        language: system
        files: ^packages\/cpsuLambda
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-capabilityStatement
        name: Lint capabilityStatement
        entry: npm
        args: ["run", "--prefix=packages/capabilityStatement", "lint"]
        language: system
        files: ^packages\/capabilityStatement
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-checkPrescriptionStatusUpdates
        name: Lint checkPrescriptionStatusUpdates
        entry: npm
        args:
          ["run", "--prefix=packages/checkPrescriptionStatusUpdates", "lint"]
        language: system
        files: ^packages\/checkPrescriptionStatusUpdates
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false
        
      - id: lint-nhsNotifyLambda
        name: Lint nhsNotifyLambda
        entry: npm
        args:
          ["run", "--prefix=packages/nhsNotifyLambda", "lint"]
        language: system
        files: ^packages\/nhsNotifyLambda
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-commonTesting
        name: Lint common/testing
        entry: npm
        args: ["run", "--prefix=packages/common/testing", "lint"]
        language: system
        files: ^packages\/common/testing
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-commonMiddyErrorHandler
        name: Lint common/middyErrorHandler
        entry: npm
        args: ["run", "--prefix=packages/common/middyErrorHandler", "lint"]
        language: system
        files: ^packages\/common/middyErrorHandler
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-samtemplates
        name: Lint sam templates
        entry: make
        args: ["lint-samtemplates"]
        language: system
        files: ^SAMtemplates
        pass_filenames: false

      - id: lint-githubactions
        name: Lint github actions
        entry: make
        args: ["lint-githubactions"]
        language: system
        files: ^.github
        types_or: [yaml]
        pass_filenames: false

      - id: lint-githubaction-scripts
        name: Lint github action scripts
        entry: make
        args: ["lint-githubaction-scripts"]
        language: system
        files: ^.github/scripts
        types_or: [sh, shell]
        pass_filenames: false

  - repo: local
    hooks:
      - id: git-secrets
        name: Git Secrets
        description: git-secrets scans commits, commit messages, and --no-ff merges to prevent adding secrets into your git repositories.
        entry: bash
        args:
          - -c
          - 'docker run -v "$LOCAL_WORKSPACE_FOLDER:/src" git-secrets --pre_commit_hook'
        language: system
fail_fast: true
default_stages: [pre-commit]
